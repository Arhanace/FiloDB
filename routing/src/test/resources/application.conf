
test {

  # just for the test events generator
  topology {
    regions {
      # region -> timezone id
      us-west = "America/Los_Angeles"
      us-east = "America/New_York"
      eu-west = "Europe/London"
      ap-northeast = "Asia/Shanghai"
      # dummy region names to actual ids for more kafka partitions
      aus-dar = "Australia/Darwin"
      aus-syd = "Australia/Sydney"
      aus-ba = "America/Argentina/Buenos_Aires"
      afr-ci = "Africa/Cairo"
      us-north = "America/Anchorage"
      am-sp = "America/Sao_Paulo"
      as-dk = "Asia/Dhaka"
      am-sj = "America/St_Johns"
      us-ch = "America/Chicago"
      af-aa = "Africa/Addis_Ababa"
      eu-pa = "Europe/Paris"
      as-kk = "Asia/Kolkata"
      as-to = "Asia/Tokyo"
      pa-ap = "Pacific/Apia"
      pa-auk = "Pacific/Auckland"
      as-hcm = "Asia/Ho_Chi_Minh"
    }
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = off

  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    retry-gate-closed-for = 1 s # default 5 s
    resend-interval = 1s # default 2 s
    log-remote-lifecycle-events = off
    log-sent-messages = off
    netty.tcp {
      hostname = "localhost"
      port = 0
    }
  }

  stream {
    materializer {
      initial-input-buffer-size = 4
      max-input-buffer-size = 16
      dispatcher = ""
      subscription-timeout {
        mode = cancel
        timeout = 5s
      }
      debug-logging = off
      output-burst-limit = 1000
      auto-fusing = on

      debug {
        fuzzing-mode = off
      }
    }

    blocking-io-dispatcher = "akka.stream.default-blocking-io-dispatcher"

    default-blocking-io-dispatcher {
      type = "Dispatcher"
      executor = "thread-pool-executor"
      throughput = 1

      thread-pool-executor {
        core-pool-size-min = 2
        core-pool-size-factor = 2.0
        core-pool-size-max = 16
      }
    }
  }
}