{
  filodb {
    cassandra {
      hosts = ["localhost"]
      port = 9042
      keyspace = "unittest"
    }

    columnstore {
      # Number of cache entries for the table cache
      tablecache-size = 50

      # Number of ChunkRowMap entries to cache
      segment-cache-size = 1000
    }

    memtable {
      # Uncomment to enable mmap-file based memtable for persistence and easy recovery upon crashes.
      # Defaults to in-memory DB only which is lost upon restarts/crashes, but easier for testing.
      # local-filename = "/tmp/filodb.memtable"

      # Maximum rows per dataset/version before ingestRows throws back a PleaseWait.
      max-rows-per-table = 2000

      # Number of rows in memtable before flushes start being triggered
      flush-trigger-rows = 5000

      # Set the free memory requirement much lower for running tests
      min-free-mb = 10

      filo.chunksize = 100

      # Make this high enough that tests will require manual flushing usually
      flush.interval = 5 s
    }

    reprojector {
      # Number of times to retry a segment write.  Exponential backoff included.
      retries = 2
      retry-base-timeunit = 1 s
    }

    # Maximum outstanding flush tasks
    scheduler-max-tasks = 4

    # The maximum number of outstanding reprojection futures (one per segment being flushed) across all
    # datasets.  Each future requires memory (for the binary Filo columnar chunks and other state), so
    # if tight on memory, reduce this number.
    max-reprojection-futures = 8

    # Thread pool size for filodb.core reprojection and I/O tasks.
    core-futures-pool-size = 2

  }

  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    loglevel = "DEBUG"
    actor {
      debug {
        # receive = on
        # autoreceive = on
        # lifecycle = on
      }
    }
  }
}
